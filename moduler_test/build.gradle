plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    /** Unresolved reference: databinding  */
    id 'kotlin-kapt'
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    namespace 'com.mvvm.test'
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        multiDexEnabled true
        applicationId "com.mvvm.test"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),//配置并启用将数据库架构导出到给定目录中的 JSON 文件的功能
                        "room.incremental"     : "true", //启用 Gradle 增量注解处理器
                        "room.expandProjection": "true",  //配置 Room 以重写查询，使其顶部星形投影在展开后仅包含 DAO 方法返回类型中定义的列
                ]
            }
        }
    }

    signingConfigs {
        releaseConfig {
            storeFile file("release.keystore")
            storePassword "415263"
            keyAlias "jiuxian_alias"
            keyPassword "415263"
            v1SigningEnabled true
            v2SigningEnabled false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }



    buildFeatures {
//        viewBinding true
        dataBinding true
    }
}

dependencies {

    implementation rootProject.ext.dependencies["multidex"]

    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["lifecycle-livedata-ktx"]
    implementation rootProject.ext.dependencies["lifecycle-viewmodel-ktx"]
    implementation rootProject.ext.dependencies["navigation-fragment-ktx"]
    implementation rootProject.ext.dependencies["navigation-ui-ktx"]

    implementation rootProject.ext.dependencies["kotlin-stdlib"]
    // Room
    implementation rootProject.ext.dependencies["room-runtime"]
    kapt rootProject.ext.dependencies["room-compiler"]
    // Kotlin Extensions and Coroutines support for Room
    implementation rootProject.ext.dependencies["room-ktx"]

    api project(':lib_baseapp')
    api project(':lib_comm')
    api project(':lib_baseui')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    implementation rootProject.ext.dependencies["arouter-api"]
    kapt rootProject.ext.dependencies["arouter-compiler"]

}